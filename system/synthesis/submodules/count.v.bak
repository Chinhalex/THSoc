module count (
	iclk,
   iReset_n,
   fre,
   duty,
   pwm
);
   input iclk;
   input iReset_n;
   input fre;
   input duty;
   output pwm;

	wire [1 : 0] fre; //sw0-1
	wire [2 : 0] duty; //sw2-4
	reg [5 : 0]  c;
	reg pwm; //led
	int loop ;
	int d;	
  
	int duty_count ;
always @(posedge iclk, negedge iReset_n)
     begin
			if (~iReset_n) 
				begin
					c <= 6'b0;  
				end
			else
				begin
					c <= (c == loop - 1) ? 4'b0 : c + 1;
				end
     end 
	  
assign pwm = (c < duty_count) ? 1'b1 : 1'b0; 
assign loop = (fre == 0) ? 5 : (fre == 1) ? 10 : (fre == 2) ? 25 : (fre == 3) ? 50 : 1;
assign d = (duty == 0 ) ? 100 :(duty == 1) ? 80 : (duty == 2) ? 50 : (duty == 3) ? 25 : (duty == 4) ? 10 : 0;
assign duty_count = loop * (d/100.0); //loop=10 duty_count=5

endmodule
